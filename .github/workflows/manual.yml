name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black 

    - name: Run Gitleaks secret scan
      uses: zricethezav/gitleaks-action@v2
      with:
        verbose: true

    - name: Install TruffleHog
      run: pip install trufflehog

    - name: Run TruffleHog scan
      run: trufflehog git --json --repo_path . 

    - name: Run Bandit security scan
      run: |
        pip install bandit
        bandit -r . || true

  #bandit Ищет ошибки, но пайплайн не обрывает. Выводит ошибки в консоль.

    - name: Run Safety vulnerability scan
      run: |
        pip install safety
        safety check -r requirements.txt

#    - name: Run Qodana scan
#      uses: jetbrains/qodana-action@v2023.3
#      with:
#          project-dir: .
#          save-report: true
#          upload-report: false

    - name: Run linters
      run: |
        flake8 .
        black .


  test:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

#      - name: Run tests
#        run: |
#          pytest --maxfail=1 --disable-warnings -q

  docs:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install documentation dependencies
        run: pip install mkdocs mkdocstrings[python] mkdocs-material
      
      - name: Install package
        run: pip install -e .

      - name: Build docs
        run: mkdocs build

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v4
        with:
            name: documentation-site
            path: site



  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker build -t literate-disco .

      - name: Run Docker container
        run: |
          docker run --rm -p 8080:5000 literate-disco python3 main.py
